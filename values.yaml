# Default values for farmdoc.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  project: hub.ncsa.illinois.edu/farmdoc
  pullPolicy: IfNotPresent
  pullSecrets:
    - name: regcred

imagePullSecrets:
  - name: regcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# this will check for services if cors is allowed
cors:
  origin: []
  methods: GET,POST,DELETE
  headers: authorization

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: fd.exmple.com
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  # should we add middleare annotations for traefik v2?
  traefik: false

# used by both data and hazard services
persistence:
  size: 10Gi
  #existingClaim: someclaim

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


# ----------------------------------------------------------------------
# DEPLOYMENT CONFIGURATION
# ----------------------------------------------------------------------
frontend:
  replicas: 1
  image:
    repository: frontend
    tag: develop
  service:
    type: ClusterIP
    port: 80
  app_env: production
  ingress:
    annotations:

api:
  replicas: 1
  image:
    repository: farmdoc-api
    tag: develop
  service:
    type: ClusterIP
    port: 5000
  ingress:
    annotations:
  env:
    postgres_user: postgres
    postgres_password: postgres
    postgres_host: farmdoc-postgresql-hl
    postgres_db: farmdoc
    postgres_port: 5432
    deploy_env: development

# ----------------------------------------------------------------------
# DEPENDENCIES CONFIGURATION
# ----------------------------------------------------------------------

# ----------------------------------------------------------------------
# POSTGRESQL
# ----------------------------------------------------------------------
postgresql:
  auth:
    postgresPassword: postgres
  postgresqlPassword: postgres
  initdbScripts:
    farmdoc.sql: |
      CREATE DATABASE farmdoc;
      CREATE USER fdadmin WITH PASSWORD 'fdadmin';
      GRANT ALL PRIVILEGES ON DATABASE farmdoc TO fdadmin;
    keycloak.sql: |
      CREATE DATABASE keycloak;
      CREATE USER keycloak WITH PASSWORD 'keycloak';
      GRANT ALL PRIVILEGES ON DATABASE keycloak TO keycloak;
    covercrop.sql: |
      CREATE DATABASE covercrop;
      CREATE USER ccadmin WITH PASSWORD 'ccadmin';
      GRANT ALL PRIVILEGES ON DATABASE covercrop TO ccadmin;

# ----------------------------------------------------------------------
# KEYCLOAK
# ----------------------------------------------------------------------
keycloak:
  postgresql:
    enabled: false
  auth:
    adminUser: admin
    adminPassword: admin
  externalDatabase:
    host: farmdoc-postgresql-hl
    port: 5432
    user: keycloak
    password: keycloak
    database: keycloak
  ingress:
    enabled: true
    hostname: farmdoc.ncsa.illinois.edu
    path: /auth/
  production: true
  proxy: edge
  httpRelativePath: /auth/

